DROP TABLE GEA_WEB.CONSOLIDACION_DIARIA;

CREATE TABLE GEA_WEB.CONSOLIDACION_DIARIA (
	ID_CONSOLIDACION_DIARIA  INTEGER(10)  NOT NULL AUTO_INCREMENT,
    /*MEDIDOR_ID INTEGER(10), ELIMINAR ESTO*/
    NUMERO_DIA INTEGER(8),
    FECHA DATE,
    ESTADO INTEGER(1), /* 0.Pendiente, 1.En ProcesoLECTURA_DIARIA, 2.Procesado*/
    PRIMARY KEY (ID_CONSOLIDACION_DIARIA)
);
/*ALTER TABLE GEA_WEB.CONSOLIDACION_DIARIA ADD CONSTRAINT FK_CON_DIARIA_MEDIDOR FOREIGN KEY (MEDIDOR_ID) REFERENCES GEA_WEB.MEDIDOR (MEDIDOR_ID); */
/*TODO: add INDEX por fecha*/

DROP PROCEDURE IF EXISTS GEA_WEB.GENERAR_CONSOLIDACIONES;
/*
Autor: Marcos Chavarria Fallas
Fecha: 30/05/2019
Revisa las fechas desde el inicio de lectura o desde la última consolidacion generada, y se generan las consolidaciones por día, sin procesar.
*/
DELIMITER //
CREATE PROCEDURE GEA_WEB.GENERAR_CONSOLIDACIONES()
BEGIN
	/*CONSTANTES*/
    /*VARIABLES*/
    DECLARE V_COUNT_CONSOLIDACIONES INT DEFAULT 0;
    DECLARE V_FECHA_DESDE DATE;
    DECLARE V_FECHA_SIGUIENTE_DESDE DATE;
    DECLARE V_FECHA_ANTERIOR_DESDE DATE;
    
    DECLARE V_MEDIDOR_COUNT INT DEFAULT 0;
    DECLARE V_LECTURA_REF FLOAT (14,4) DEFAULT 0;
	DECLARE V_LECTURA_VALIDA BOOLEAN DEFAULT FALSE;
	DECLARE V_MEDIDOR_ID INTEGER(10) default 0;
    /*Definicion de Handlers*/
    DECLARE EXIT HANDLER FOR NOT FOUND SELECT 'No data found';
    DECLARE EXIT HANDLER FOR SQLEXCEPTION 
    BEGIN
        ROLLBACK; 
    END;
    
    START TRANSACTION;
	
    /*Obtiene api key y fecha para procesar*/
    SELECT COUNT(*) INTO V_COUNT_CONSOLIDACIONES FROM GEA_WEB.CONSOLIDACION_DIARIA;
    IF (V_COUNT_CONSOLIDACIONES = 0) THEN
		SELECT DATE(MIN(FECHA_LECTURA)) INTO V_FECHA_DESDE FROM LECTURA; /*Primera fecha de lectura*/
    ELSE
		SELECT DATE(MAX(FECHA)) INTO V_FECHA_DESDE FROM GEA_WEB.CONSOLIDACION_DIARIA; /*ültima fecha de consolidaciones*/
    END IF;
    
    SELECT DATE_ADD(V_FECHA_DESDE, INTERVAL 1 DAY) INTO V_FECHA_SIGUIENTE_DESDE;
    SELECT DATE_ADD(V_FECHA_DESDE, INTERVAL -1 DAY) INTO V_FECHA_ANTERIOR_DESDE;
    
    WHILE (V_FECHA_SIGUIENTE_DESDE < DATE(SYSDATE)) DO
		SELECT M.*, IFNULL(LD.MEDIDOR_ID, 0) FROM MEDIDOR M LEFT JOIN LECTURA_DIARIA LD ON (M.MEDIDOR_ID = LD.MEDIDOR_ID AND M.FECHA_INCLUSION >= V_FECHA_DESDE AND LD.DIA_NUMERO = DATE_FORMAT(V_FECHA_ANTERIOR_DESDE, '%Y%m%d'));
    END WHILE;
    
    
    SET v_api_key = JSON_UNQUOTE(JSON_EXTRACT(P_LECTURA, '$.api_key'));
    SET v_timestamp = FROM_UNIXTIME(JSON_EXTRACT(P_LECTURA, '$.timestamp'));
    SET v_data = JSON_EXTRACT(P_LECTURA, '$.data');
    /*Revisa todos los datos del arreglo*/
    WHILE V_INDEX < JSON_LENGTH(v_data) DO
		SET V_LECTURA_VALIDA = FALSE;
		SET V_CURRENT_DATA = JSON_EXTRACT(v_data,CONCAT('$[',V_INDEX,']'));
        set V_VOLUMEN = JSON_EXTRACT(V_CURRENT_DATA, '$.volumen');
		set v_temperature = JSON_EXTRACT(V_CURRENT_DATA, '$.temperature');
        set V_MEDIDOR_ID = JSON_EXTRACT(V_CURRENT_DATA, '$.measurer_internal_id');
        /*1. Revisa si internal ID existe como medidor*/
        /*2. */
        SELECT COUNT(MEDIDOR_ID), IFNULL(MAX(ULTIMA_LECUTRA),0)  INTO V_MEDIDOR_COUNT, V_LECTURA_REF FROM GEA_WEB.MEDIDOR WHERE MEDIDOR_ID = V_MEDIDOR_ID;
        select CONCAT('-REVISA SI MEDIDOR EXISTE ID;', V_MEDIDOR_ID, 'CONT;', V_MEDIDOR_COUNT, ' REF:', V_LECTURA_REF);
        IF (V_MEDIDOR_COUNT = 0) THEN 
			select '-- MEDIDOR NO EXISTE - CREA' ;
			/*1.a registra nuevo medidor*/
            INSERT INTO GEA_WEB.MEDIDOR(MEDIDOR_ID, FECHA_INCLUSION, ULTIMA_LECUTRA, FECHA_ULTIMA_LECTURA) VALUES (V_MEDIDOR_ID, v_timestamp, V_VOLUMEN, v_timestamp);
        ELSE
			select CONCAT('V_LECTURA_REF ', V_LECTURA_REF, ' - vOLUMEN: ',  V_VOLUMEN);
			IF (V_LECTURA_REF <= V_VOLUMEN) THEN
				select '--MEDIDOR EXISTE, ACTUALIZA' ;
				/*1.b Actualiza registro de medidor*/
				UPDATE GEA_WEB.MEDIDOR SET FECHA_ULTIMA_LECTURA = v_timestamp, FECHA_INCLUSION = FECHA_INCLUSION, ULTIMA_LECUTRA = V_VOLUMEN WHERE MEDIDOR_ID = V_MEDIDOR_ID;
			else
				select '--ERROR LECUTRA NEGATIVA' ;
				INSERT INTO GEA_WEB.ERROR_LECTURA (FECHA_LECTURA, ERROR_CATALAGO_ID, REQUEST) VALUES (v_timestamp, C_LECTURA_NEGATIVA, V_CURRENT_DATA);
			END IF;
		END IF;
        SET V_LECTURA_VALIDA = (V_LECTURA_REF <= V_VOLUMEN);
        /*Registrar lectura*/
		IF(V_LECTURA_VALIDA) THEN
			select '-iNSERTA LECTURA valida' ;
			INSERT INTO GEA_WEB.LECTURA (MEDIDOR_ID, TEMPERATURA, FECHA_LECTURA, VOLUMEN, PROCESADA) VALUES (V_MEDIDOR_ID, v_temperature, v_timestamp, V_VOLUMEN, 0);
        END IF;
		SET V_INDEX = V_INDEX + 1;
	END WHILE;
    select 'fin DE WHILE' ;
    COMMIT;
END //
DELIMITER ;

    SELECT COUNT(*) FROM GEA_WEB.CONSOLIDACION_DIARIA; /*0*/
	SELECT DATE(MIN(FECHA_LECTURA)) FROM LECTURA; /*2019-05-12*/
	SELECT DATE_ADD(DATE('2019-05-12'), INTERVAL 1 DAY); /*2019-05-13*/
    SELECT DATE_ADD(DATE('2019-05-12'), INTERVAL -1 DAY); /*2019-05-11*/
    SELECT DATE('2019-05-13') < DATE(SYSDATE()); /*TRUE*/

	SELECT M.*, IFNULL(LD.MEDIDOR_ID, 0) FROM MEDIDOR M LEFT JOIN LECTURA_DIARIA LD ON (M.MEDIDOR_ID = LD.MEDIDOR_ID) WHERE M.FECHA_INCLUSION >= DATE('2019-05-12') AND LD.DIA_NUMERO = DATE_FORMAT(DATE('2019-05-11'), '%Y%m%d');
    
    
	SELECT M.*, IFNULL(CD., 0) FROM MEDIDOR M LEFT JOIN CONSOLIDACION_DIARIA CD ON (M.MEDIDOR_ID = CD.MEDIDOR_ID) WHERE M.FECHA_INCLUSION >= DATE('2019-05-12') AND CD.FECHA = DATE('2019-05-11');
  
	SELECT M.*, IFNULL(LD.MEDIDOR_ID, 0) FROM MEDIDOR M LEFT JOIN LECTURA_DIARIA LD ON (M.MEDIDOR_ID = LD.MEDIDOR_ID AND M.FECHA_INCLUSION >= DATE('2019-05-12') AND LD.DIA_NUMERO = DATE_FORMAT(DATE('2019-05-11'), '%Y%m%d'));
	SELECT * FROM MEDIDOR M WHERE M.FECHA_INCLUSION >= DATE('2019-05-12')
  
  DATE_FORMAT(DATE('2019-05-11'), '%Y%m%d');
    select DATE('2019-05-13') < DATE(sysdate())

/*PROCESO*/
SELECT COUNT(*) FROM GEA_WEB.CONSOLIDACION_DIARIA; /*IF Count = 0*/
    SELECT MIN(FECHA_LECTURA) FROM LECTURA; /*CONVERT A NUMERO -> INICIO*/
/*SI NUMERO > 0*/ SELECT MAX(NUMERO_DIA) /*COMO FECHA*/
    /*WHILE   FECHA + 1 < HOY */
    /*
		
		SELECT *,  NVL(VOLUMEN) FROM MEDIDOR LEFT JOIN LECTURA_CONSLIDADA DIA_ACTUAL - 1;
        INSERT CONSOLIDACION_DIARIA (ID, FECHA COMO NUMERO, 0);
        COMMIT;
    */
    
  SELECT DATE_ADD(STR_TO_DATE(20190531,'%Y%m%d'), INTERVAL -1 DAY);
  